#!/usr/bin/env ruby
# encoding: utf-8

RESET=ARGV[0]
RED= ARGV[1]
YELLOW=ARGV[2]
GREEN=ARGV[3]

module Git
  def self.active?
    system("git status >/dev/null 2>&1")
  end

  def self.search_for_git(dir_path)
    dir_path = File.split(dir_path).first
    if File.directory?(File.join(dir_path, ".git"))
      true
    elsif dir_path == "/"
      false
    else
      search_for_git(dir_path)
    end   
  end

  def self.prompt
    status = `git status`
    if status =~ /working directory clean/
      state = GREEN
    else
      state = RED
    end
    if status =~ /Your branch is (.*) of '(.*)\/.*' by (.*) commit/
      remote = "#{YELLOW}#{$1 == "ahead" ? "↑" : "↓"}(#{$3})#{$2}"
    end
    if status =~ /Your branch and (.*)\/.* have diverged/
      remote = "#{YELLOW}#{$1}↕"
    end
    if status =~ /^# On branch (.*?)$/
      "[git:#{state}#{$1}#{remote}#{RESET}]"
    else
      ""
    end
  end
end

prompt = if Git.active?
  Git.prompt
else
  `vcprompt`
end

puts prompt